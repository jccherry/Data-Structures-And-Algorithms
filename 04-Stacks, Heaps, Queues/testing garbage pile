#testing garbage pile

'''
#testing push times
for i in range(testing_operations):
    start_time = timeit.default_timer()
    for j in range(i):
        linear_30_stack.push('Test Value')
    times_linear.append(timeit.default_timer() - start_time)
    #number_of_pushes_linear.append(i+1)

for i in range(testing_operations):
    start_time = timeit.default_timer()
    for j in range(i):
        circular_30_stack.push('Test Value')
    times_circular.append(timeit.default_timer() - start_time)
'''


#testing pop times

for i in range(300):
    circular_30_stack.push('Test Value' + str(i))
    #print('pushed')
    linear_30_stack.push('Test Value' + str(i))

#print(str(circular_30_stack.data))

for i in range(300):
    start_time = timeit.default_timer()
    for j in range(i):
        linear_30_stack.pop()
    times_linear.append(timeit.default_timer() - start_time)
    #number_of_pushes_linear.append(i+1)

for i in range(300):
    start_time = timeit.default_timer()
    for j in range(i):
        circular_30_stack.pop()
    times_circular.append(timeit.default_timer() - start_time)
